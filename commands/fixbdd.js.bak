const { SlashCommandBuilder } = require('@discordjs/builders');
const mariadb = require('mariadb');
require("dotenv").config();
const pool = mariadb.createPool({
    host: process.env.DB_HOST,
    port: process.env.DB_PORT,
    user: process.env.DB_USER,
    password: process.env.DB_PASS,
    database: process.env.DB_NAME,
    connectionLimit: 5
});

const roles = {
    promos: {
        "2023": "1018861724377559121",
        "2024": "1018861720124526683",
        "2025": "1018861719960961077",
        "2026": "1018861719315030076",
        "2027": "1018861711396175892"
    },
    ancien: "1018867079300001822",
    villes: {
        "Paris": "1016966906340704276",
        "Bordeaux": "1016966938934657084"
    }
}

module.exports = {
    data: new SlashCommandBuilder()
        .setName('fixbdd')
        .setDescription('Règle les problèmes de synchronisation avec la BDD'),
    async execute(interaction) {
        console.log("Fixing BDD");
        console.log("BDD: " + process.env.DB_HOST + ":" + process.env.DB_PORT + " " + process.env.DB_NAME);
        let visiteurs = [];
        const members = await interaction.guild.members.fetch();
    
        members.forEach((m) => {
            if (m.roles.cache.has("1018926458632146995")) {
                visiteurs.push(m);
                console.log("Added " + m.displayName + " to visiteurs list");
            }
        });
        console.log(visiteurs.length);
        try {
            for (const m in visiteurs) {
                try {
                    await pool.execute("INSERT INTO `members` (`discordid`, `first_name`, `last_name`, `ville`, `promo`, `isAncien`, `rank`, `efreiid`) VALUES ('" + visiteurs[m].id + "', '', '', '', '0', '0', 'Visiteur', '0')");
                    console.log("Added " + visiteurs[m].displayName + " to SQL DB");
                    if (visiteurs[m].roles.cache.has(roles.ancien)) {
                        await pool.execute("UPDATE `members` SET `isAncien` = '1' WHERE `discordid` = ?", [visiteurs[m].id]);
                        console.log("Set " + visiteurs[m].displayName + " to Ancien");
                    }
                    else {
                        for (let p in roles.promos) {
                            if (visiteurs[m].roles.cache.has(roles.promos[p])) {
                                await pool.execute("UPDATE `members` SET `promo` = ? WHERE `discordid` = ?", [p, visiteurs[m].id]);
                                console.log("Set " + visiteurs[m].displayName + " to promo " + p);
                                break;
                            }
                        }
                    }
                    for (let v in roles.villes) {
                        if (visiteurs[m].roles.cache.has(roles.villes[v])) {
                            await pool.execute("UPDATE `members` SET `ville` = ? WHERE `discordid` = ?", [v, visiteurs[m].id]);
                            console.log("Set " + visiteurs[m].displayName + " to ville " + v);
                            break;
                        }
                    }
                }
                catch (err) {
                    console.error(err);
                    console.warn("Failed to add " + visiteurs[m].displayName + " to SQL DB");
                }
            }
            await interaction.reply({content: 'BDD fixée !', ephemeral: true});
        } catch (err) {
            console.error(err);
            await interaction.reply({content: 'Erreur lors de la connexion à la BDD', ephemeral: true});
        }
    },
};
